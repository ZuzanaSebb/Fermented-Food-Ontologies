name: Comment Trigger

on:
  issue_comment:
    types: [created, edited]

jobs:
  process_comment:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
          node-version: '14'
    
    - name: Check if commenter is organization member
      id: org-check
      run: |
        COMMENTER_LOGIN=$(jq -r .comment.user.login "$GITHUB_EVENT_PATH")
        ORG="bokulich-lab"
        RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.ORG_ACCESS_TOKEN }}" "https://api.github.com/orgs/$ORG/members/$COMMENTER_LOGIN")
        if [[ "$RESPONSE" == *"Not Found"* ]]; then
          echo "Commenter is not a member of the organization."
          exit 1
        else
          echo "Commenter is a member of the organization."
        fi
        
          - name: Install dependencies
        run: npm install

    - name: Debug JSON Content
      run: cat fermented_food_ontology.json

    - name: Process JSON
      env:
          COMMENT_BODY: ${{ github.event.comment.body }}
      run: |
          const fs = require('fs');
          const path = require('path');

          try {
            const ontologyPath = path.join(process.env.GITHUB_WORKSPACE, 'fermented_food_ontology.json');
            const ontologyData = fs.readFileSync(ontologyPath, 'utf-8');
            const ontology = JSON.parse(ontologyData);

            // Debug output
            console.log('Ontology JSON:', ontology);
          } catch (error) {
            console.error('Error processing JSON:', error);
            process.exit(1);
          }

          const commentBody = process.env.COMMENT_BODY;
          const commentRegex = /^\/approved ontology string:([a-zA-Z]+)-([a-zA-Z]+)-([a-zA-Z]+)$/;

          const match = commentBody.match(commentRegex);
          if (!match) {
            console.error('Comment format incorrect. Please use \'/approved ontology string:level1-level2-level3\'.');
            process.exit(1);
          }

          const [, level1, level2, level3] = match;

          console.log('Levels:', { level1, level2, level3 });
